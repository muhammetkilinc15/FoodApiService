name: Deploy to DigitalOcean

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: üöÄ Checkout Code
        uses: actions/checkout@v3

      - name: üîë Load SSH Key Securely
        run: |
          eval "$(ssh-agent -s)"
          echo "${{ secrets.DOCKER_SSH_KEY }}" | tr -d '\r' | ssh-add -
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.DIGITALOCEAN_IP }} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: üê≥ Securely Update Only Changed Containers
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.DIGITALOCEAN_USER }}@${{ secrets.DIGITALOCEAN_IP }} << 'EOF'
            set -e  # Enable error catching

            cd /home/user/myapp  # Go to project directory
            git pull origin master  # Pull the latest changes

            # List currently running services
            RUNNING_SERVICES=$(docker compose ps --services)

            # Pull the new images and determine changed services
            docker compose pull > /tmp/docker_pull.log 2>&1
            CHANGED_SERVICES=$(grep "Downloaded newer image" /tmp/docker_pull.log | awk '{print $1}' | sort | uniq)

            # Update only the changed services if they are running
            for SERVICE in $CHANGED_SERVICES; do
              if echo "$RUNNING_SERVICES" | grep -q "^$SERVICE$"; then
                echo "üìå Updating $SERVICE..."
                docker compose up --build -d $SERVICE
              else
                echo "‚ö†Ô∏è $SERVICE is not running, will not update."
              fi
            done

            # Clean up old images
            docker image prune -f
          EOF
