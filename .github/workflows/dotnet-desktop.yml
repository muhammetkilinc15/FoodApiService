name: Deploy to DigitalOcean

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: üöÄ Checkout Code
        uses: actions/checkout@v3

      - name: üîê Set up DigitalOcean API Token
        env:
          DO_API_TOKEN: ${{ secrets.DIGITALOCEAN_API_TOKEN }}
        run: |
          echo $DO_API_TOKEN > do_api_token.txt

      - name: üì¶ Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      - name: üîÑ Get Droplet ID
        id: droplet
        run: |
          DROPLET_ID=$(curl -X GET "https://api.digitalocean.com/v2/droplets?name=YOUR_DROPLET_NAME" \
            -H "Authorization: Bearer $DO_API_TOKEN" \
            | jq -r '.droplets[0].id')
          echo "DROPLET_ID=$DROPLET_ID" >> $GITHUB_ENV

      - name: üê≥ Deploy Docker Containers
        run: |
          curl -X POST "https://api.digitalocean.com/v2/droplets/$DROPLET_ID/actions" \
            -H "Authorization: Bearer $DO_API_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{"type":"power_cycle"}'

          # Wait for the droplet to power cycle
          sleep 60

          # Execute commands on the Droplet
          SCRIPT=$(cat <<'EOF'
            cd /home/user/myapp
            git pull origin master
            docker compose pull
            docker compose up --build -d
            docker image prune -f
EOF
          )

          curl -X POST "https://api.digitalocean.com/v2/droplets/$DROPLET_ID/actions" \
            -H "Authorization: Bearer $DO_API_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{\"type\":\"execute\",\"command\":\"$(echo $SCRIPT | base64)\"}"
